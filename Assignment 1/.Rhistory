# Please do not touch this R code chunk!
knitr::opts_chunk$set(
echo = TRUE,
eval = FALSE,
out.width = "70%",
fig.width = 8,
fig.height = 6,
fig.retina = 3)
set.seed(6)
filter <- dplyr::filter
library(tidyverse)
library(emo)
library(tidyverse)
library(emo)
music <- read_csv("data/music-sub.csv")
head(music,10)
colnames(music[,3])
tab_music<- music  %>%
rename(song = ...1)
tab_music %>% #1pt
dplyr::filter(artist == "Vivaldi") %>% #1pt
slice(1:4)                                # 1pt
rock_music <- music %>%
dplyr::filter(type=='Rock')
nrow(rock_music)
data_tab<- music %>%
dplyr::filter(type %in% c('Rock','New wave'))
head(data_tab,4)
dim(data_tab)
write.csv(data_tab,'data/data_tab.csv')
unique_artists = data_tab %>% group_by(type)  %>%
summarise(total_artists = sum(n_distinct(artist)))
unique_artists
Avg_music <- data_tab %>%
dplyr::filter(type=="Rock") %>%  #1pt
group_by(artist) %>%        #1pt
summarise(Avg = mean(lfreq))  #0.5pt
Avg_music #0.5pt
tab_music_range <- tab_music %>%
group_by(type) %>%
mutate(range = (lfreq-min(lfreq))/max(lfreq))
head(tab_music_range,4)
write.csv(tab_music_range,'data/tab_music_range.csv')
or_tab_music <- tab_music_range %>%
arrange(-range) #1pt
or_tab_music
freqs_avg<-or_tab_music %>% group_by(type) %>% summarise(mean=mean(range)) %>% arrange(-mean)
freqs_var<-or_tab_music %>% group_by(type) %>% summarise(sd=sd(range)) %>% arrange(-sd)
write.csv(freqs_avg,'data/freqs_avg.csv')
write.csv(freqs_var,'data/freqs_var.csv')
tab_music_range %>% ggplot(aes(y=range))+geom_boxplot() + ylab('Range') +  ggtitle('Distribution of range') + theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'))
tab_music_range %>% ggplot(aes(x=type,y=range,fill=type)) + geom_boxplot() + xlab('Genre') + ylab('Range') + labs(fill='Genre') + ggtitle("Distribution of Range for each Genre") +theme_classic() + theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'))
tab_music_range %>% ggplot(aes(x=type,y=lfreq,color=type))+geom_boxplot() + xlab('Genre') + ylab('Lfreq') + labs(color='Genre') + ggtitle("Distribution of Lfreq for each Genre") + theme_classic() + theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'))
lfreq_values <- tab_music_range %>%
dplyr:: group_by(type) %>%
summarise(maximum_original_frequency = max(lfreq)) %>%
arrange(-maximum_original_frequency)
write.csv(lfreq_values,'data/lfreq_values.csv')
tab_music_range %>% ggplot(aes(y=lfreq,x=lmax)) + geom_point(size=2.5,color='red') + ggtitle("Original frequency (lfreq) Vs. variable frequency (lmax)") + theme_classic() + theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'))
tab_music_range %>% ggplot(aes(x=lmax,y=lfreq,color=type))+geom_point(size=2.5) + ggtitle("Original frequency (lfreq) Vs. variable frequency (lmax)") + labs(color='Genre') + theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'))
data_tab
distinct(data)
distinct(data_tab$artist)
# Please do not touch this R code chunk!
knitr::opts_chunk$set(
echo = TRUE,
eval = FALSE,
out.width = "70%",
fig.width = 8,
fig.height = 6,
fig.retina = 3)
set.seed(6)
filter <- dplyr::filter
unique_artists = data_tab %>% group_by(artist)  %>%
summarise(total_artists = sum(n_distinct(artist)))
# Please do not touch this R code chunk!
knitr::opts_chunk$set(
echo = TRUE,
eval = FALSE,
out.width = "70%",
fig.width = 8,
fig.height = 6,
fig.retina = 3)
set.seed(6)
filter <- dplyr::filter
unique_artists = data_tab %>% group_by(artist)  %>%
summarise(total_artists = sum(n_distinct(artist)))
library(tidyverse)
library(emo)
unique_artists = data_tab %>% group_by(artist)  %>%
summarise(total_artists = sum(n_distinct(artist)))
unique_artists
Avg_music <- data_tab %>%
dplyr::filter(type=="Rock") %>%  #1pt
group_by(artist) %>%        #1pt
summarise(Avg = mean(lfreq))  #0.5pt
Avg_music #0.5pt
tab_music_range <- tab_music %>%
group_by(type) %>%
mutate(range = (lfreq-min(lfreq))/max(lfreq))
head(tab_music_range,4)
write.csv(tab_music_range,'data/tab_music_range.csv')
or_tab_music <- tab_music_range %>%
arrange(-range) #1pt
or_tab_music
freqs_avg<-or_tab_music %>% group_by(type) %>% summarise(mean=mean(range)) %>% arrange(-mean)
freqs_var<-or_tab_music %>% group_by(type) %>% summarise(sd=sd(range)) %>% arrange(-sd)
write.csv(freqs_avg,'data/freqs_avg.csv')
write.csv(freqs_var,'data/freqs_var.csv')
tab_music_range %>% ggplot(aes(y=range))+geom_boxplot() + ylab('Range') +  ggtitle('Distribution of range') + theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'))
tab_music_range %>% ggplot(aes(x=type,y=range,fill=type)) + geom_boxplot() + xlab('Genre') + ylab('Range') + labs(fill='Genre') + ggtitle("Distribution of Range for each Genre") +theme_classic() + theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'))
tab_music_range %>% ggplot(aes(x=type,y=lfreq,color=type))+geom_boxplot() + xlab('Genre') + ylab('Lfreq') + labs(color='Genre') + ggtitle("Distribution of Lfreq for each Genre") + theme_classic() + theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'))
lfreq_values <- tab_music_range %>%
dplyr:: group_by(type) %>%
summarise(maximum_original_frequency = max(lfreq)) %>%
arrange(-maximum_original_frequency)
write.csv(lfreq_values,'data/lfreq_values.csv')
tab_music_range %>% ggplot(aes(y=lfreq,x=lmax)) + geom_point(size=2.5,color='red') + ggtitle("Original frequency (lfreq) Vs. variable frequency (lmax)") + theme_classic() + theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'))
tab_music_range %>% ggplot(aes(x=lmax,y=lfreq,color=type))+geom_point(size=2.5) + ggtitle("Original frequency (lfreq) Vs. variable frequency (lmax)") + labs(color='Genre') + theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'))
unique_artists = data_tab %>% group_by(artist)  %>%
summarise(total_artists = sum(artist))
unique_artists = data_tab %>% group_by(artist)  %>%
summarise(total_artists = sum(artist)))
unique_artists = data_tab %>% group_by(type)  %>%
summarise(total_artists = sum(artist))
unique_artists = data_tab %>% group_by(type)  %>%
summarise(total_artists = sum(n_distinct(artist)))
unique_artists
unique(data_tab$artist)
head(lfreq_values)
tab_music_range
original_lfreq_range <- tab_music_range %>%
dplyr:: group_by(type) %>%
mutate(lfreq_range = max(lfreq)-min(lfreq)) %>%
arrange(-lfreq_range)
original_lfreq_range
head(original_lfreq_range$type,1)
tail(original_lfreq_values$type,1)
tail(original_lfreq_range$type,1)
original_lfreq_range <- tab_music_range %>%
dplyr:: group_by(type) %>%
mutate(lfreq_range = max(lfreq)-min(lfreq)) %>%
arrange(-lfreq_range)
write.csv(original_lfreq_range,'data/lfreq_values.csv')
original_lfreq_range <- tab_music_range %>%
dplyr:: group_by(type) %>%
mutate(lfreq_range = max(lfreq)-min(lfreq)) %>%
arrange(-lfreq_range)
write.csv(original_lfreq_range,'data/original_lfreq_range.csv')
original_lfreq_range <- tab_music_range %>%
dplyr:: group_by(type) %>%
mutate(lfreq_range = max(lfreq)-min(lfreq)) %>%
arrange(-lfreq_range)
write.csv(original_lfreq_range,'data/original_lfreq_range.csv')
tab_music<- music  %>%
rename(song = ...1)
tab_music %>% #1pt
dplyr::filter(artist == "Vivaldi") %>% #1pt
head(4)                                # 1pt
# Please do not touch this R code chunk!
knitr::opts_chunk$set(
echo = TRUE,
eval = FALSE,
out.width = "70%",
fig.width = 8,
fig.height = 6,
fig.retina = 3)
set.seed(6)
filter <- dplyr::filter
freqs_avg<-or_tab_music %>% group_by(type) %>% summarise(mean=mean(range)) %>% arrange(-mean)
library(tidyverse)
library(emo)
music <- read_csv("data/music-sub.csv")
head(music,10)
colnames(music[,3])
tab_music<- music  %>%
rename(song = ...1)
tab_music %>% #1pt
dplyr::filter(artist == "Vivaldi") %>% #1pt
head(4)                                # 1pt
rock_music <- music %>%
dplyr::filter(type=='Rock')
nrow(rock_music)
data_tab<- music %>%
dplyr::filter(type %in% c('Rock','New wave'))
head(data_tab,4)
dim(data_tab)
write.csv(data_tab,'data/data_tab.csv')
unique_artists = data_tab %>% group_by(type)  %>%
summarise(total_artists = sum(n_distinct(artist)))
unique_artists
unique(data_tab$artist)
Avg_music <- data_tab %>%
dplyr::filter(type=="Rock") %>%  #1pt
group_by(artist) %>%        #1pt
summarise(Avg = mean(lfreq))  #0.5pt
Avg_music #0.5pt
tab_music_range <- tab_music %>%
group_by(type) %>%
mutate(range = (lfreq-min(lfreq))/max(lfreq))
head(tab_music_range,4)
write.csv(tab_music_range,'data/tab_music_range.csv')
or_tab_music <- tab_music_range %>%
arrange(-range) #1pt
or_tab_music
freqs_avg<-or_tab_music %>% group_by(type) %>% summarise(mean=mean(range)) %>% arrange(-mean)
freqs_var<-or_tab_music %>% group_by(type) %>% summarise(sd=sd(range)) %>% arrange(sd)
write.csv(freqs_avg,'data/freqs_avg.csv')
write.csv(freqs_var,'data/freqs_var.csv')
tab_music_range %>% ggplot(aes(y=range))+geom_boxplot() + ylab('Range') +  ggtitle('Distribution of range') + theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'))
tab_music_range %>% ggplot(aes(x=type,y=range,fill=type)) + geom_boxplot() + xlab('Genre') + ylab('Range') + labs(fill='Genre') + ggtitle("Distribution of Range for each Genre") +theme_classic() + theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'))
tab_music_range %>% ggplot(aes(x=type,y=lfreq,color=type))+geom_boxplot() + xlab('Genre') + ylab('Lfreq') + labs(color='Genre') + ggtitle("Distribution of Lfreq for each Genre") + theme_classic() + theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'))
original_lfreq_range <- tab_music_range %>%
dplyr:: group_by(type) %>%
mutate(lfreq_range = max(lfreq)-min(lfreq)) %>%
arrange(-lfreq_range)
write.csv(original_lfreq_range,'data/original_lfreq_range.csv')
tab_music_range %>% ggplot(aes(y=lfreq,x=lmax)) + geom_point(size=2.5,color='red') + ggtitle("Original frequency (lfreq) Vs. variable frequency (lmax)") + theme_classic() + theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'))
tab_music_range %>% ggplot(aes(x=lmax,y=lfreq,color=type))+geom_point(size=2.5) + ggtitle("Original frequency (lfreq) Vs. variable frequency (lmax)") + labs(color='Genre') + theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'))
